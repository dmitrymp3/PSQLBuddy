from conf.config_classes import BotoConfig, AllDatabases
from dataclasses import dataclass

@dataclass
class CommonConfig:
    """
    Заполнять обязательно не все. Если вам нужен только модуль делающий бэкапы - можете заполнить
    только данные отмеченные в комментарии как BACKUP.
    """
    # Инициализация экземпляра класса, управляющего списком БД. Не трогать
    databases = AllDatabases()

    # BACKUP
    # Количество хранимых копий - значения по умолчанию для всех баз
    databases.set_default_freq({
        'DAILY'     : 4,
        'WEEKLY'    : 4,
        'MONTHLY'   : 4,
        'YEARLY'    : 999,
    })

    # Здесь добавляем новые базы данных
    # Если ввести только название базы - то периодичность хранения 
    # резервных копий будет установлена по умолчанию (см.выше)
    databases.add_database('volleyball_db')
    databases.add_database('basketball_db', {'WEEKLY': 10})
    databases.add_database('super_db', {
        'DAILY'     : 44,
        'WEEKLY'    : 22,
        'MONTHLY'   : 11,
        'YEARLY'    : 1,
    })

    # BACKUP & RESTORE
    boto_config = BotoConfig(
        aws_access_key_id='',
        aws_secret_access_key='',
        s3_bucket=''
    )

    # RESTORE
    # Токен бота
    bot_token = ''
    # Telegram-ID пользователей бота
    tg_admins = {}

    # BACKUP & RESTORE
    # Папка, где будут временно размещены созданные бэкапы перед загрузкой в s3. 
    # Сюда же загружаются бэкапы перед восстановлением. 
    # Внимание! Автоматически очищается целиком. 
    # Можно не менять. По умолчанию папка в программе
    temp_path = 'temp'
